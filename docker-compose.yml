version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: safechat-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: safechat123
      MONGO_INITDB_DATABASE: safechat_ai
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init:/docker-entrypoint-initdb.d
    networks:
      - safechat-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: safechat-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:safechat123@mongodb:27017/safechat_ai?authSource=admin
      JWT_SECRET: your_super_secret_jwt_key_change_in_production
      ML_SERVICE_URL: http://ml-service:8000
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - backend_logs:/app/logs
    depends_on:
      - mongodb
      - ml-service
    networks:
      - safechat-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ML Service
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: safechat-ml-service
    restart: unless-stopped
    environment:
      DEBUG: "False"
      HOST: 0.0.0.0
      PORT: 8000
      MODEL_CACHE_DIR: /app/models/cache
      USE_GPU: "False"
    ports:
      - "8000:8000"
    volumes:
      - ml_models:/app/models/cache
      - ml_logs:/app/logs
    networks:
      - safechat-network
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: safechat-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SOCKET_URL: http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - safechat-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (optional - for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: safechat-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - safechat-network
    command: redis-server --appendonly yes

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  ml_models:
    driver: local
  ml_logs:
    driver: local
  backend_logs:
    driver: local

networks:
  safechat-network:
    driver: bridge