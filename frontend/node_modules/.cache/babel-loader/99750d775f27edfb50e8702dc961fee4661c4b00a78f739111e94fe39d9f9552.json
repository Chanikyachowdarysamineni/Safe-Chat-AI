{"ast":null,"code":"var _jsxFileName = \"D:\\\\documents\\\\Desktop\\\\safe- chat-AI\\\\frontend\\\\src\\\\services\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [realTimeData, setRealTimeData] = useState({\n    newMessages: [],\n    flaggedMessages: [],\n    activeUsers: 0\n  });\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    if (user) {\n      initializeSocket();\n    }\n    return () => {\n      if (socket) {\n        socket.disconnect();\n      }\n    };\n  }, [user]);\n  const initializeSocket = () => {\n    const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n      auth: {\n        token: localStorage.getItem('authToken')\n      },\n      transports: ['websocket', 'polling']\n    });\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setConnected(true);\n\n      // Join moderator room\n      newSocket.emit('join-moderator', user.id);\n      toast.success('Connected to live monitoring');\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n      toast.error('Disconnected from live monitoring');\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setConnected(false);\n      toast.error('Failed to connect to live monitoring');\n    });\n\n    // Message events\n    newSocket.on('new-message', data => {\n      var _data$message$analysi;\n      setRealTimeData(prev => ({\n        ...prev,\n        newMessages: [data, ...prev.newMessages.slice(0, 49)] // Keep last 50\n      }));\n\n      // Show notification for flagged messages\n      if ((_data$message$analysi = data.message.analysis) !== null && _data$message$analysi !== void 0 && _data$message$analysi.abuse_detected) {\n        toast.error(`Flagged message from ${data.user.username}`, {\n          duration: 6000,\n          icon: '🚨'\n        });\n      }\n    });\n    newSocket.on('message-flagged', data => {\n      setRealTimeData(prev => ({\n        ...prev,\n        flaggedMessages: [data, ...prev.flaggedMessages.slice(0, 29)] // Keep last 30\n      }));\n      toast.error(`Message flagged: ${data.flag.reason}`, {\n        duration: 5000,\n        icon: '⚠️'\n      });\n    });\n    newSocket.on('message-analyzing', data => {\n      toast.loading(`Analyzing message from ${data.userId}...`, {\n        duration: 2000,\n        icon: '🔍'\n      });\n    });\n    newSocket.on('flag-created', data => {\n      toast.warning(`New flag created by ${data.flaggedBy}`, {\n        duration: 4000,\n        icon: '🏁'\n      });\n    });\n    newSocket.on('flag-reviewed', data => {\n      toast.success(`Flag reviewed by ${data.reviewedBy}`, {\n        duration: 3000,\n        icon: '✅'\n      });\n    });\n    newSocket.on('user-status-updated', data => {\n      const action = data.isActive ? 'activated' : 'deactivated';\n      toast.info(`User ${data.username} ${action} by ${data.updatedBy}`, {\n        duration: 4000,\n        icon: data.isActive ? '✅' : '❌'\n      });\n    });\n    newSocket.on('message-status-updated', data => {\n      toast.info(`Message status updated to ${data.status} by ${data.updatedBy}`, {\n        duration: 3000,\n        icon: '📝'\n      });\n    });\n\n    // Error events\n    newSocket.on('analysis-error', data => {\n      toast.error(`Analysis failed: ${data.error}`, {\n        duration: 5000,\n        icon: '❌'\n      });\n    });\n    setSocket(newSocket);\n  };\n  const emitEvent = (event, data) => {\n    if (socket && connected) {\n      socket.emit(event, data);\n    }\n  };\n  const analyzeMessage = messageData => {\n    emitEvent('analyze-message', messageData);\n  };\n  const value = {\n    socket,\n    connected,\n    realTimeData,\n    emitEvent,\n    analyzeMessage\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"XuTh6wkDrTiiSxfNB3N7Lw6mAKE=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","toast","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","connected","setConnected","realTimeData","setRealTimeData","newMessages","flaggedMessages","activeUsers","user","initializeSocket","disconnect","newSocket","process","env","REACT_APP_SOCKET_URL","auth","token","localStorage","getItem","transports","on","console","log","emit","id","success","error","data","_data$message$analysi","prev","slice","message","analysis","abuse_detected","username","duration","icon","flag","reason","loading","userId","warning","flaggedBy","reviewedBy","action","isActive","info","updatedBy","status","emitEvent","event","analyzeMessage","messageData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/documents/Desktop/safe- chat-AI/frontend/src/services/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { useAuth } from './AuthContext';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const [realTimeData, setRealTimeData] = useState({\r\n    newMessages: [],\r\n    flaggedMessages: [],\r\n    activeUsers: 0,\r\n  });\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      initializeSocket();\r\n    }\r\n\r\n    return () => {\r\n      if (socket) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  }, [user]);\r\n\r\n  const initializeSocket = () => {\r\n    const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\r\n      auth: {\r\n        token: localStorage.getItem('authToken'),\r\n      },\r\n      transports: ['websocket', 'polling'],\r\n    });\r\n\r\n    newSocket.on('connect', () => {\r\n      console.log('Connected to server');\r\n      setConnected(true);\r\n      \r\n      // Join moderator room\r\n      newSocket.emit('join-moderator', user.id);\r\n      \r\n      toast.success('Connected to live monitoring');\r\n    });\r\n\r\n    newSocket.on('disconnect', () => {\r\n      console.log('Disconnected from server');\r\n      setConnected(false);\r\n      toast.error('Disconnected from live monitoring');\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('Connection error:', error);\r\n      setConnected(false);\r\n      toast.error('Failed to connect to live monitoring');\r\n    });\r\n\r\n    // Message events\r\n    newSocket.on('new-message', (data) => {\r\n      setRealTimeData(prev => ({\r\n        ...prev,\r\n        newMessages: [data, ...prev.newMessages.slice(0, 49)] // Keep last 50\r\n      }));\r\n\r\n      // Show notification for flagged messages\r\n      if (data.message.analysis?.abuse_detected) {\r\n        toast.error(`Flagged message from ${data.user.username}`, {\r\n          duration: 6000,\r\n          icon: '🚨',\r\n        });\r\n      }\r\n    });\r\n\r\n    newSocket.on('message-flagged', (data) => {\r\n      setRealTimeData(prev => ({\r\n        ...prev,\r\n        flaggedMessages: [data, ...prev.flaggedMessages.slice(0, 29)] // Keep last 30\r\n      }));\r\n\r\n      toast.error(`Message flagged: ${data.flag.reason}`, {\r\n        duration: 5000,\r\n        icon: '⚠️',\r\n      });\r\n    });\r\n\r\n    newSocket.on('message-analyzing', (data) => {\r\n      toast.loading(`Analyzing message from ${data.userId}...`, {\r\n        duration: 2000,\r\n        icon: '🔍',\r\n      });\r\n    });\r\n\r\n    newSocket.on('flag-created', (data) => {\r\n      toast.warning(`New flag created by ${data.flaggedBy}`, {\r\n        duration: 4000,\r\n        icon: '🏁',\r\n      });\r\n    });\r\n\r\n    newSocket.on('flag-reviewed', (data) => {\r\n      toast.success(`Flag reviewed by ${data.reviewedBy}`, {\r\n        duration: 3000,\r\n        icon: '✅',\r\n      });\r\n    });\r\n\r\n    newSocket.on('user-status-updated', (data) => {\r\n      const action = data.isActive ? 'activated' : 'deactivated';\r\n      toast.info(`User ${data.username} ${action} by ${data.updatedBy}`, {\r\n        duration: 4000,\r\n        icon: data.isActive ? '✅' : '❌',\r\n      });\r\n    });\r\n\r\n    newSocket.on('message-status-updated', (data) => {\r\n      toast.info(`Message status updated to ${data.status} by ${data.updatedBy}`, {\r\n        duration: 3000,\r\n        icon: '📝',\r\n      });\r\n    });\r\n\r\n    // Error events\r\n    newSocket.on('analysis-error', (data) => {\r\n      toast.error(`Analysis failed: ${data.error}`, {\r\n        duration: 5000,\r\n        icon: '❌',\r\n      });\r\n    });\r\n\r\n    setSocket(newSocket);\r\n  };\r\n\r\n  const emitEvent = (event, data) => {\r\n    if (socket && connected) {\r\n      socket.emit(event, data);\r\n    }\r\n  };\r\n\r\n  const analyzeMessage = (messageData) => {\r\n    emitEvent('analyze-message', messageData);\r\n  };\r\n\r\n  const value = {\r\n    socket,\r\n    connected,\r\n    realTimeData,\r\n    emitEvent,\r\n    analyzeMessage,\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}