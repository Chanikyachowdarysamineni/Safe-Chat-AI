{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  register: userData => api.post('/auth/register', userData),\n  getMe: () => api.get('/auth/me')\n};\n\n// Messages API\nexport const messagesAPI = {\n  getMessages: params => api.get('/messages', {\n    params\n  }),\n  getMessage: id => api.get(`/messages/${id}`),\n  createMessage: messageData => api.post('/messages', messageData),\n  updateMessageStatus: (id, status) => api.put(`/messages/${id}/status`, {\n    status\n  }),\n  reanalyzeMessage: id => api.post(`/messages/${id}/reanalyze`)\n};\n\n// Flags API\nexport const flagsAPI = {\n  getFlags: params => api.get('/flags', {\n    params\n  }),\n  createFlag: flagData => api.post('/flags', flagData),\n  reviewFlag: (id, reviewData) => api.put(`/flags/${id}/review`, reviewData),\n  getFlagStats: params => api.get('/flags/stats', {\n    params\n  })\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: params => api.get('/users', {\n    params\n  }),\n  getChatUsers: params => api.get('/users/chat', {\n    params\n  }),\n  getUser: id => api.get(`/users/${id}`),\n  updateUserStatus: (id, isActive) => api.put(`/users/${id}/status`, {\n    isActive\n  }),\n  updateUserRole: (id, role) => api.put(`/users/${id}/role`, {\n    role\n  }),\n  getUserAnalytics: (id, params) => api.get(`/users/${id}/analytics`, {\n    params\n  })\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  getOverview: params => api.get('/dashboard/overview', {\n    params\n  }),\n  getEmotions: params => api.get('/dashboard/emotions', {\n    params\n  }),\n  getAbuseTrends: params => api.get('/dashboard/abuse-trends', {\n    params\n  }),\n  getRealTimeData: () => api.get('/dashboard/real-time')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","register","userData","getMe","get","messagesAPI","getMessages","params","getMessage","id","createMessage","messageData","updateMessageStatus","put","reanalyzeMessage","flagsAPI","getFlags","createFlag","flagData","reviewFlag","reviewData","getFlagStats","usersAPI","getUsers","getChatUsers","getUser","updateUserStatus","isActive","updateUserRole","role","getUserAnalytics","dashboardAPI","getOverview","getEmotions","getAbuseTrends","getRealTimeData"],"sources":["D:/documents/Desktop/safe- chat-AI/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  getMe: () => api.get('/auth/me'),\r\n};\r\n\r\n// Messages API\r\nexport const messagesAPI = {\r\n  getMessages: (params) => api.get('/messages', { params }),\r\n  getMessage: (id) => api.get(`/messages/${id}`),\r\n  createMessage: (messageData) => api.post('/messages', messageData),\r\n  updateMessageStatus: (id, status) => api.put(`/messages/${id}/status`, { status }),\r\n  reanalyzeMessage: (id) => api.post(`/messages/${id}/reanalyze`),\r\n};\r\n\r\n// Flags API\r\nexport const flagsAPI = {\r\n  getFlags: (params) => api.get('/flags', { params }),\r\n  createFlag: (flagData) => api.post('/flags', flagData),\r\n  reviewFlag: (id, reviewData) => api.put(`/flags/${id}/review`, reviewData),\r\n  getFlagStats: (params) => api.get('/flags/stats', { params }),\r\n};\r\n\r\n// Users API\r\nexport const usersAPI = {\r\n  getUsers: (params) => api.get('/users', { params }),\r\n  getChatUsers: (params) => api.get('/users/chat', { params }),\r\n  getUser: (id) => api.get(`/users/${id}`),\r\n  updateUserStatus: (id, isActive) => api.put(`/users/${id}/status`, { isActive }),\r\n  updateUserRole: (id, role) => api.put(`/users/${id}/role`, { role }),\r\n  getUserAnalytics: (id, params) => api.get(`/users/${id}/analytics`, { params }),\r\n};\r\n\r\n// Dashboard API\r\nexport const dashboardAPI = {\r\n  getOverview: (params) => api.get('/dashboard/overview', { params }),\r\n  getEmotions: (params) => api.get('/dashboard/emotions', { params }),\r\n  getAbuseTrends: (params) => api.get('/dashboard/abuse-trends', { params }),\r\n  getRealTimeData: () => api.get('/dashboard/real-time'),\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}